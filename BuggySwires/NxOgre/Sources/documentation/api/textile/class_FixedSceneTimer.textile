p(d). A fixed SceneTimer is used to divide the current timestep into neat smaller equal time values, any remaining
time is carried on into the next timestep.


h2(fn destructor). <a name='FixedSceneTimer'></a>FixedSceneTimer

p(d). Destructor.


h2(fn function). <a name='fetchResults'></a>fetchResults

p(d). Fetch the results and make changes to the scene to reflect them.


p(n). **Note** -- Do not call this function by hand. Scene will call this at the appropriate time.


h2(fn function). <a name='hasResults'></a>hasResults

p(d). Has PhysX finished simulating the timestep yet?


h3. Return

p(r). **bool** -- If PhysX has finished simulating or not.


h2(fn variable). <a name='mAccumulator'></a>mAccumulator

p(d). Carry over time for next timestep.


h2(fn variable). <a name='mMaxTimeStep'></a>mMaxTimeStep

p(d). Maximum time that can be simulated in a single timestep.


h2(fn variable). <a name='mTimer'></a>mTimer

p(d). Internal timer


h2(fn function). <a name='simulate'></a>simulate

p(d). Simulate the PhysX scene.


p(n). **Note** -- Do not call this function by hand. Scene will call this at the appropriate time.


h3. Arguments

|_. Argument|_. Description|
|float __deltaTime__ | Amount of time passed, this shouldn't be the maximum timeseep.|


